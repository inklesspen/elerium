[project]
dependencies = [
  "fontTools>=4.56.0",
  "more-itertools>=10.6.0",
  "ufoLib2>=0.17.1",
  "typer>=0.15.1",
]
description = "Improve your UFOs"
name = "elerium"
readme = "README.md"
requires-python = ">=3.12"
version = "0.1.0"

[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core>=3.2,<4"]

[dependency-groups]
dev = [
  "pytest>=8.3.4",
]

[project.scripts]
elerium = "elerium.cli:app"

[tool.ruff]
extend-exclude = []
line-length = 140
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = ["TRY003"]
# consider for future:
# https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt
# https://docs.astral.sh/ruff/rules/#flake8-errmsg-em
# https://docs.astral.sh/ruff/rules/#eradicate-era
select = ["E4", "E7", "E9", "F", "B", "I", "RUF005", "RUF012", "RUF013", "FA", "C4", "DTZ", "LOG", "G", "PIE", "RET", "SIM", "TCH", "TRY"]

[tool.ruff.format]
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

# [tool.ruff.lint.flake8-type-checking]
# runtime-evaluated-base-classes = ["msgspec.Struct"]
# runtime-evaluated-decorators = ["dataclasses.dataclass"]
